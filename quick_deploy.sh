#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è —á–µ—Ä–µ–∑ SSH (–±–µ–∑ GitHub Actions)

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_IP="${SERVER_IP:-}"
SERVER_USER="${SERVER_USER:-root}"
SERVER_PORT="${SERVER_PORT:-22}"
DEPLOY_PATH="/opt/terminal-chat"
SERVICE_NAME="terminal-chat"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() { echo -e "${BLUE}[INFO]${NC} $1"; }
print_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
print_error() { echo -e "${RED}[ERROR]${NC} $1"; }

if [ -z "$SERVER_IP" ]; then
    read -p "IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: " SERVER_IP
fi

if [ -z "$SERVER_USER" ]; then
    read -p "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å SSH (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: root): " INPUT_USER
    SERVER_USER=${INPUT_USER:-root}
fi

print_status "–î–µ–ø–ª–æ–π –Ω–∞ $SERVER_USER@$SERVER_IP:$SERVER_PORT"

# –°–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤
print_status "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞..."
tar -czf terminal-chat.tar.gz \
    server.py server_production.py client.py \
    config_example.py .env.example requirements.txt \
    terminal-chat.service manage_service.sh \
    docker-compose.yml Dockerfile \
    --exclude='.git' --exclude='*.log' --exclude='chat_data.json'

# –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
print_status "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp -P "$SERVER_PORT" terminal-chat.tar.gz "$SERVER_USER@$SERVER_IP:/tmp/"

# –í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–ø–ª–æ–π
print_status "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh -p "$SERVER_PORT" "$SERVER_USER@$SERVER_IP" << 'EOF'
    set -e
    
    # –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    if [ -d "/opt/terminal-chat" ]; then
        sudo cp -r /opt/terminal-chat /opt/terminal-chat.backup.$(date +%Y%m%d_%H%M%S)
    fi
    
    # –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    sudo mkdir -p /opt/terminal-chat
    
    # –†–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å
    cd /tmp
    tar -xzf terminal-chat.tar.gz
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å
    sudo systemctl stop terminal-chat 2>/dev/null || true
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã
    sudo cp *.py /opt/terminal-chat/
    sudo cp requirements.txt /opt/terminal-chat/ 2>/dev/null || true
    
    # –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "/opt/terminal-chat/config.py" ]; then
        sudo cp config_example.py /opt/terminal-chat/config.py
    fi
    
    if [ ! -f "/opt/terminal-chat/.env" ]; then
        sudo cp .env.example /opt/terminal-chat/.env 2>/dev/null || true
    fi
    
    # –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if ! id chatuser >/dev/null 2>&1; then
        sudo useradd --system --home-dir /opt/terminal-chat --shell /bin/false chatuser
    fi
    
    # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    sudo chown -R chatuser:chatuser /opt/terminal-chat
    sudo chmod 755 /opt/terminal-chat
    sudo chmod 644 /opt/terminal-chat/*.py
    
    # Systemd —Å–µ—Ä–≤–∏—Å
    sudo cp terminal-chat.service /etc/systemd/system/
    sudo systemctl daemon-reload
    sudo systemctl enable terminal-chat
    sudo systemctl start terminal-chat
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞
    sleep 2
    if sudo systemctl is-active --quiet terminal-chat; then
        echo "‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"
        sudo journalctl -u terminal-chat --no-pager -n 10
    fi
    
    # –û—á–∏—Å—Ç–∫–∞
    rm -f /tmp/terminal-chat.tar.gz /tmp/*.py /tmp/*.service
    
    echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
EOF

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
rm -f terminal-chat.tar.gz

print_success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
print_status "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —á–∞—Ç—É: python3 client.py $SERVER_IP 12345"